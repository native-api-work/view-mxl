#Область ОписаниеПеременных

#КонецОбласти

#Область ПрограммныйИнтерфейс

// <Описание функции>
//
// Параметры:
//  Адрес  - Строка - адрес во временном хранилище
//
// Возвращаемое значение:
//   (нет)
//
Функция ПрочитатьПомещенныйФайл(Знач Адрес) Экспорт
	ПMXL_ТабличныйДокумент_ПрочитатьИзВременногоХранилища(ЭтотОбъект.ТабличныйДокумент,Адрес);
КонецФункции


#КонецОбласти

#Область ОбработчикиСобытий
// Код процедур и функций
#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция СведенияОВнешнейОбработке() Экспорт
	Перем ПараметрыРегистрации, Команда;
	
	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке();
	ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительнаяОбработка();
	ПараметрыРегистрации.Версия = "1.0";
	ПараметрыРегистрации.БезопасныйРежим = Ложь;
	
	Команда = ПараметрыРегистрации.Команды.Добавить();
	Команда.Идентификатор = "Форма";
	Команда.Представление = ЭтотОбъект.Метаданные().Представление();
	Команда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы();
	
	Возврат ПараметрыРегистрации;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Прочитать из временного хранилища
//
// Параметры:
//  ТабличныйДокумент	 - ТабличныйДокумент
//  Адрес				 - Строка - адрес во временном хранилище
//
Процедура ПMXL_ТабличныйДокумент_ПрочитатьИзВременногоХранилища(Знач ТабличныйДокумент, Знач Адрес) Экспорт
	Перем Поток;

	Поток = ПолучитьИзВременногоХранилища(Адрес).ОткрытьПотокДляЧтения();
    ТабличныйДокумент.Прочитать(Поток);  
    Поток.Закрыть();

КонецПроцедуры

#КонецОбласти

#Область Инициализация

#КонецОбласти